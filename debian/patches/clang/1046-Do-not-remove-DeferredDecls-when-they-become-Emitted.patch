From cd184131dd152d561638c3b985bc78f5246aa281 Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Fri, 3 Mar 2017 13:01:34 +0100
Subject: [PATCH 45/59] Do not remove DeferredDecls when they become
 EmittedDeferredDecls.

Needs an appropriate "if" on a future LangOpts::incremantallyProcessing.
---
 lib/CodeGen/CodeGenModule.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/clang/lib/CodeGen/CodeGenModule.cpp b/clang/lib/CodeGen/CodeGenModule.cpp
index ecc3a4438b..690fdef550 100644
--- a/clang/lib/CodeGen/CodeGenModule.cpp
+++ b/clang/lib/CodeGen/CodeGenModule.cpp
@@ -3149,7 +3149,7 @@ llvm::Constant *CodeGenModule::GetOrCreateLLVMFunction(
       // don't need it anymore).
       addDeferredDeclToEmit(DDI->second);
       EmittedDeferredDecls[F] = std::make_pair(DDI->first, DDI->second);
-      DeferredDecls.erase(DDI);
+      //DeferredDecls.erase(DDI);
 
       // Otherwise, there are cases we have to worry about where we're
       // using a declaration for which we must emit a definition but where
@@ -3404,7 +3404,7 @@ CodeGenModule::GetOrCreateLLVMGlobal(StringRef MangledName,
     // list, and remove it from DeferredDecls (since we don't need it anymore).
     addDeferredDeclToEmit(DDI->second);
     EmittedDeferredDecls[GV] = std::make_pair(DDI->first, DDI->second);
-    DeferredDecls.erase(DDI);
+    //DeferredDecls.erase(DDI);
   }
 
   // Handle things which are present even on external declarations.
-- 
2.34.1

