From 5989a85df63efe5e8fca2837a8100847ba6765d5 Mon Sep 17 00:00:00 2001
From: Philippe Canal <pcanal@fnal.gov>
Date: Sun, 13 Nov 2016 15:17:36 -0600
Subject: [PATCH 42/59] Fix assertion when removing decls coming from a pch/pcm

When the decls come from a pch/pcm, they are added to the lookup table
only at the time of the first search.

This resulted in the assertion triggering when using an overzealous version
of AutoloadingVisitor in the test roottest/root/io/newClassDef/noclassdef.
---
 lib/AST/DeclBase.cpp | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/clang/lib/AST/DeclBase.cpp b/clang/lib/AST/DeclBase.cpp
index fd80e1532e..e9f6ed338f 100644
--- a/clang/lib/AST/DeclBase.cpp
+++ b/clang/lib/AST/DeclBase.cpp
@@ -1475,11 +1475,13 @@ void DeclContext::removeDecl(Decl *D) {
       StoredDeclsMap *Map = DC->getPrimaryContext()->LookupPtr;
       if (Map) {
         StoredDeclsMap::iterator Pos = Map->find(ND->getDeclName());
-        assert(Pos != Map->end() && "no lookup entry for decl");
-        // Remove the decl only if it is contained.
-        StoredDeclsList::DeclsTy *Vec = Pos->second.getAsVector();
-        if ((Vec && is_contained(*Vec, ND)) || Pos->second.getAsDecl() == ND)
-          Pos->second.remove(ND);
+        assert((DC->hasExternalVisibleStorage() || Pos != Map->end()) && "no lookup entry for decl");
+        if (Pos != Map->end()) {
+          // Remove the decl only if it is contained.
+          StoredDeclsList::DeclsTy *Vec = Pos->second.getAsVector();
+          if ((Vec && is_contained(*Vec, ND)) || Pos->second.getAsDecl() == ND)
+            Pos->second.remove(ND);
+        }
       }
     } while (DC->isTransparentContext() && (DC = DC->getParent()));
   }
-- 
2.34.1

