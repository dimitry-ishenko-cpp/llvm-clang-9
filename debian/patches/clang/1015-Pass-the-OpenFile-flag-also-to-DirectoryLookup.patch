From 9ed0f24c62c7a34272f2bd14d592dbb6652ac910 Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Thu, 15 May 2014 14:50:06 +0200
Subject: [PATCH 15/59] Pass the OpenFile flag also to DirectoryLookup.

---
 include/clang/Lex/DirectoryLookup.h |  3 ++-
 lib/Lex/HeaderSearch.cpp            | 10 ++++++----
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/clang/include/clang/Lex/DirectoryLookup.h b/clang/include/clang/Lex/DirectoryLookup.h
index 7c556ac351..ad22744af0 100644
--- a/clang/include/clang/Lex/DirectoryLookup.h
+++ b/clang/include/clang/Lex/DirectoryLookup.h
@@ -185,7 +185,8 @@ public:
                               bool &InUserSpecifiedSystemFramework,
                               bool &IsFrameworkFound,
                               bool &HasBeenMapped,
-                              SmallVectorImpl<char> &MappedName) const;
+                              SmallVectorImpl<char> &MappedName,
+                              bool OpenFile = true) const;
 
 private:
   const FileEntry *DoFrameworkLookup(
diff --git a/clang/lib/Lex/HeaderSearch.cpp b/clang/lib/Lex/HeaderSearch.cpp
index 2011cb1ed7..7b97ddcb04 100644
--- a/clang/lib/Lex/HeaderSearch.cpp
+++ b/clang/lib/Lex/HeaderSearch.cpp
@@ -338,7 +338,8 @@ const FileEntry *DirectoryLookup::LookupFile(
     bool &InUserSpecifiedSystemFramework,
     bool &IsFrameworkFound,
     bool &HasBeenMapped,
-    SmallVectorImpl<char> &MappedName) const {
+    SmallVectorImpl<char> &MappedName,
+    bool OpenFile) const {
   InUserSpecifiedSystemFramework = false;
   HasBeenMapped = false;
 
@@ -359,7 +360,8 @@ const FileEntry *DirectoryLookup::LookupFile(
 
     return HS.getFileAndSuggestModule(TmpDir, IncludeLoc, getDir(),
                                       isSystemHeaderDirectory(),
-                                      RequestingModule, SuggestedModule);
+                                      RequestingModule, SuggestedModule,
+                                      OpenFile);
   }
 
   if (isFramework())
@@ -386,7 +388,7 @@ const FileEntry *DirectoryLookup::LookupFile(
     HasBeenMapped = true;
     Result = HM->LookupFile(Filename, HS.getFileMgr());
   } else {
-    Result = HS.getFileMgr().getFile(Dest);
+    Result = HS.getFileMgr().getFile(Dest, OpenFile);
   }
 
   if (Result) {
@@ -865,7 +867,7 @@ const FileEntry *HeaderSearch::LookupFile(
     const FileEntry *FE = SearchDirs[i].LookupFile(
         Filename, *this, IncludeLoc, SearchPath, RelativePath, RequestingModule,
         SuggestedModule, InUserSpecifiedSystemFramework, IsFrameworkFoundInDir,
-        HasBeenMapped, MappedName);
+        HasBeenMapped, MappedName, OpenFile);
     if (HasBeenMapped) {
       CacheLookup.MappedName =
           copyString(Filename, LookupFileCache.getAllocator());
-- 
2.34.1

