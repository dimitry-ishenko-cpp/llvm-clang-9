From 31923d33c3c4d048a9e494d29a55acb6023cebe2 Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Tue, 6 Sep 2016 16:10:43 +0200
Subject: [PATCH 36/59] Keep track of emitted deferred decls, in case cling
 needs to unload them.

They will then be put back into the DeferredDecls.
This can go away once cling draws its symbols from an ever-growing, central
module, instead of separate modules per transaction.
---
 lib/CodeGen/CodeGenModule.cpp | 1 +
 lib/CodeGen/CodeGenModule.h   | 4 ++++
 2 files changed, 5 insertions(+)

diff --git a/clang/lib/CodeGen/CodeGenModule.cpp b/clang/lib/CodeGen/CodeGenModule.cpp
index 21a931c050..ac10922e81 100644
--- a/clang/lib/CodeGen/CodeGenModule.cpp
+++ b/clang/lib/CodeGen/CodeGenModule.cpp
@@ -2132,6 +2132,7 @@ void CodeGenModule::EmitDeferred() {
 
     // Otherwise, emit the definition and move on to the next one.
     EmitGlobalDefinition(D, GV);
+    EmittedDeferredDecls[GV->getName()] = D;
 
     // If we found out that we need to emit more decls, do that recursively.
     // This has the advantage that the decls are emitted in a DFS and related
diff --git a/clang/lib/CodeGen/CodeGenModule.h b/clang/lib/CodeGen/CodeGenModule.h
index 95964afed4..eaf0389713 100644
--- a/clang/lib/CodeGen/CodeGenModule.h
+++ b/clang/lib/CodeGen/CodeGenModule.h
@@ -345,6 +345,10 @@ private:
     DeferredDeclsToEmit.emplace_back(GD);
   }
 
+  /// Enables unloading of emitted symbols that need to become deferred.
+  llvm::StringMap<GlobalDecl> EmittedDeferredDecls;
+
+
   /// List of alias we have emitted. Used to make sure that what they point to
   /// is defined once we get to the end of the of the translation unit.
   std::vector<GlobalDecl> Aliases;
-- 
2.34.1

